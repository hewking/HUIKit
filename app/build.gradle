apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

// android DSL 的意思，有关dsl 都在大括号内写
android {
    compileSdkVersion rootProject.ext.C_V
    buildToolsVersion rootProject.ext.B_V

    defaultConfig {
        applicationId "com.hewing.uikit.demo"
        minSdkVersion rootProject.ext.M_V
        targetSdkVersion rootProject.ext.T_V
        versionCode rootProject.ext.V_C
        versionName rootProject.ext.V_N
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
        }
    }

//    dataBinding {
//        enabled true
//    }

    viewBinding {
        enabled true
    }

// To inline the bytecode built with JVM target 1.8 into
// bytecode that is being built with JVM target 1.6. (e.g. navArgs)
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    lintOptions {
        checkAllWarnings = true
    }

    // https://developer.android.com/studio/build/build-variants
    // We use flavors to build different versions of the app. One version which uses
    // the mock ExposureNotification API and one for the real Google API
    flavorDimensions "version"
    productFlavors {
        device {
            dimension "version"
            buildConfigField "String", "BUILD_VARIANT", "\"device\""
//            resValue "string", "app_name", "Corona-Warn"
        }
    }

    def apk_time = releaseTime()

/*    *//*Gradle3.0 以上的方法*//*
    applicationVariants.all { variant ->
        if (variant.buildType.name != "debug") {
            variant.getPackageApplication().outputDirectory = new File(project.rootDir.absolutePath + "/apk")
        }

        variant.getPackageApplicationProvider().outputScope.apkDatas.forEach { apkData ->
            apkData.outputFileName = "guildchat-" +
                    variant.flavorName + "-" +
                    variant.buildType.name + "-" +
                    variant.versionName + "-" +
                    apk_time +*//* "-" +
                    variant.signingConfig.name +*//*
                    ".apk"
        }
    }*/

//    android.applicationVariants.all {variant  ->
//        def mergedFlavor = variant.getMergedFlavor()
//        //定义可在清单中使用的构建变量的值。
//        mergedFlavor.manifestPlaceholders = [hostName:"www.example.com/${ variant.versionName }"]
//    }

    println("class name : ${it.class}")

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            //定义apk名字
            def apkFileName = "HUILibrary-" +
                    variant.flavorName + "-" +
                    variant.buildType.name + "-" +
                    variant.versionName + "-" +
                    apk_time + "-" +
//                    variant.signingConfig.name +
                    ".apk"
            outputFileName = apkFileName
        }
    }

}

static def releaseTime() {
    return new Date().format("yyyy-MM-dd HHmm", TimeZone.getTimeZone("UTC"))
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.3.0-alpha01'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.2.0-beta01'
    implementation 'androidx.recyclerview:recyclerview:1.2.0-alpha03'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta6'
    implementation 'com.google.android:flexbox:1.1.0'
    implementation 'androidx.core:core-ktx:1.3.0'
    //glide
    implementation "com.github.bumptech.glide:glide:${glide_v}"
    implementation 'jp.wasabeef:glide-transformations:4.3.0'

    // coil
    implementation("io.coil-kt:coil:0.11.0")
    implementation project(path: ':uikit')
    annotationProcessor "com.github.bumptech.glide:compiler:${glide_v}"
    kapt "com.github.bumptech.glide:compiler:${glide_v}"
    api 'pl.droidsonroids.gif:android-gif-drawable:1.2.12'
    testImplementation 'junit:junit:4.13'
}
