apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

// android DSL 的意思，有关dsl 都在大括号内写
android {
    compileSdkVersion rootProject.ext.C_V
    buildToolsVersion rootProject.ext.B_V

    defaultConfig {
        applicationId "com.example.administrator.customviewtest"
        minSdkVersion rootProject.ext.M_V
        targetSdkVersion rootProject.ext.T_V
        versionCode rootProject.ext.V_C
        versionName rootProject.ext.V_N
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    def apk_time = releaseTime()

/*    *//*Gradle3.0 以上的方法*//*
    applicationVariants.all { variant ->
        if (variant.buildType.name != "debug") {
            variant.getPackageApplication().outputDirectory = new File(project.rootDir.absolutePath + "/apk")
        }

        variant.getPackageApplicationProvider().outputScope.apkDatas.forEach { apkData ->
            apkData.outputFileName = "guildchat-" +
                    variant.flavorName + "-" +
                    variant.buildType.name + "-" +
                    variant.versionName + "-" +
                    apk_time +*//* "-" +
                    variant.signingConfig.name +*//*
                    ".apk"
        }
    }*/

//    android.applicationVariants.all {variant  ->
//        def mergedFlavor = variant.getMergedFlavor()
//        //定义可在清单中使用的构建变量的值。
//        mergedFlavor.manifestPlaceholders = [hostName:"www.example.com/${ variant.versionName }"]
//    }

    println("class name : ${it.class}")

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            //定义apk名字
            def formatedDate = new Date().format("MMddHHmm")
            def apkFileName ="guildchat-" +
                    variant.flavorName + "-" +
//                    variant.buildType.name + "-" +
                    variant.versionName + "-" +
                    apk_time + "-" +
//                    variant.signingConfig.name +
                    ".apk"
            outputFileName = apkFileName
        }
    }

}

static def releaseTime() {
    return new Date().format("yyyy-MM-dd HHmm", TimeZone.getTimeZone("UTC"))
}

def S_V = "27.1.0"

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    //    api "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    api 'androidx.appcompat:appcompat:1.1.0-alpha01'
    api 'androidx.legacy:legacy-support-v4:1.0.0'
    api 'com.google.android.material:material:1.1.0-alpha02'
    api 'androidx.recyclerview:recyclerview:1.1.0-alpha01'
    api 'androidx.cardview:cardview:1.0.0'
    api 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'
    //    api 'com.google.android:flexbox:0.2.5'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    //glide
    implementation "com.github.bumptech.glide:glide:${glide_v}"
    annotationProcessor "com.github.bumptech.glide:compiler:${glide_v}"
    kapt "com.github.bumptech.glide:compiler:${glide_v}"
    api 'pl.droidsonroids.gif:android-gif-drawable:1.2.12'
    implementation 'com.google.android:flexbox:1.1.0'
    testImplementation 'junit:junit:4.12'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

